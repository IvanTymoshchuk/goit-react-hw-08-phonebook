{"version":3,"file":"static/js/328.8bccf8dd.chunk.js","mappings":"2RAAaA,EAAgB,CAC3BC,SAAU,cACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WCNIC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,EAGjBC,EAAqB,SAAAF,GAChC,IAAMG,EANmB,SAAAH,GAAK,OAAIA,EAAMG,SAASC,KAAnB,CAMbC,CAAYL,GAEvBM,EADSP,EAAUC,GACOO,cAEhC,OAAOJ,EAASF,QAAO,SAAAO,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EADR,GAG/B,E,oBCwED,EA3EiB,WACf,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMX,GAAWY,EAAAA,EAAAA,IAAYb,GACvBc,GAAWC,EAAAA,EAAAA,MAoBXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,OAAQZ,GACN,IAAK,OACHG,EAAQS,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,OAEL,EAED,OACE,UAAC,KAAD,CAAMC,SAjCa,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAiBhB,EAAKF,cACZJ,EAASuB,MACvB,SAAAC,GAAE,OAAIA,EAAGlB,KAAKF,gBAAkBkB,CAA9B,IAIFG,EAAAA,GAAAA,MAAA,UAAenB,EAAf,4BAA+CpB,IAIjD2B,GAASa,EAAAA,EAAAA,IAAW,CAAEC,IAAIC,EAAAA,EAAAA,MAAUtB,KAAAA,EAAMI,OAAAA,KAC1CD,EAAQ,IACRE,EAAU,IACX,EAiBC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,oBACA,SAAC,KAAD,CACEkB,KAAK,OACLC,YAAY,YACZxB,KAAK,OACLY,MAAOZ,EACPyB,SAAUhB,EACViB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,KAAD,sBACA,SAAC,KAAD,CACEL,KAAK,MACLC,YAAY,cACZxB,KAAK,SACLY,MAAOR,EACPqB,SAAUhB,EACViB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,UAAC,KAAD,CAAQL,KAAK,SAAb,6BAEE,SAACM,EAAA,EAAD,SAIP,E,mBCjFYC,EAAWC,EAAAA,EAAAA,GAAH,4IAKR,SAACC,GAAD,OAAOA,EAAE3C,MAAM4C,MAAM,EAArB,IAEAC,EAAOH,EAAAA,EAAAA,GAAH,gLAMF,SAACC,GAAD,OAAOA,EAAE3C,MAAM8C,SAASC,CAAxB,IACJ,SAACJ,GAAD,OAAOA,EAAE3C,MAAMgD,OAAOC,KAAtB,I,UCWX,EAnBoB,WAClB,IAAM5C,GAAWY,EAAAA,EAAAA,IAAYb,GACvBc,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACsB,EAAD,UACGpC,EAAS6C,KAAI,gBAAGlB,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,KAAMI,EAAb,EAAaA,OAAb,OACZ,UAAC8B,EAAD,WACGlC,EAAO,MAAQI,GAEhB,SAAC,KAAD,CAAQmB,KAAK,SAASiB,QAAS,kBAAMjC,GAASkC,EAAAA,EAAAA,IAAcpB,GAA7B,EAA/B,UACE,SAACqB,EAAA,EAAD,QAJOrB,EADC,KAWnB,ECvBYsB,EAAaZ,EAAAA,EAAAA,KAAH,kEAIVa,EAAcb,EAAAA,EAAAA,MAAH,qCACf,SAACC,GAAD,OAAOA,EAAE3C,MAAMgD,OAAOQ,IAAtB,I,GAEkBd,EAAAA,EAAAA,MAAH,sB,SCoBxB,EAtBe,WACb,IAAMnB,GAAQN,EAAAA,EAAAA,IAAYhB,GACpBiB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACmC,EAAD,WACE,SAACC,EAAD,WACE,SAAC,KAAD,CACErB,KAAK,OACLX,MAAOA,EACPa,SAVa,SAAAf,GACnBH,GAASuC,EAAAA,EAAAA,GAAapC,EAAEC,OAAOC,OAChC,EASOY,YAAY,qCAKrB,ECnBYuB,GANYhB,EAAAA,EAAAA,IAAH,oFAMDA,EAAAA,EAAAA,GAAH,8HAIH,SAACC,GAAD,OAAOA,EAAE3C,MAAM8C,SAASa,EAAxB,IACJ,SAAChB,GAAD,OAAOA,EAAE3C,MAAMgD,OAAOC,KAAtB,KCAX,EAVoB,SAAC,GAAa,IAAZX,EAAW,EAAXA,MACpB,OACE,SAACoB,EAAD,UAASpB,GAEZ,ECaD,MAdA,WACE,OACE,+BACE,UAAC,KAAD,YACE,SAAC,EAAD,CAAaA,MAAM,eACnB,SAAC,EAAD,KACA,SAAC,EAAD,CAAaA,MAAM,cACnB,SAAC,EAAD,KACA,SAAC,EAAD,QAIP,C","sources":["components/notifyOptions/notifyOptions.js","redux/contacts/selectors.js","components/FormList/FormList.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Layout/Layout.styled.js","components/Layout/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["export const notifyOptions = {\n  position: 'bottom-left',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n","export const getContacts = state => state.contacts.items; \n\nexport const getFilter = state => state.filter; \n\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state); \n  const filter = getFilter(state); \n  const normalizedFilter = filter.toLowerCase(); \n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { UserAddOutlined } from '@ant-design/icons';\nimport { Form, Label, Input, Button, Span } from './FormList.styled';\nimport { notifyOptions } from '../notifyOptions/notifyOptions';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst FormList = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    const isAdded = contacts.find(\n      el => el.name.toLowerCase() === normalizedName\n    );\n\n    if (isAdded) {\n      toast.error(`${name}: is already in contacts`, notifyOptions);\n      return;\n    }\n\n    dispatch(addContact({ id: nanoid(), name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <Input\n          type=\"text\"\n          placeholder=\"Your name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        <Span>Number</Span>\n        <Input\n          type=\"tel\"\n          placeholder=\"Your number\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add to contacts\n        <UserAddOutlined />\n      </Button>\n    </Form>\n  );\n};\n\nexport default FormList;\n","import styled from '@emotion/styled';\n\nexport const ListWrap = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: ${(p) => p.theme.space[4]}px;\n`;\nexport const List = styled.li`\n  padding: 10px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: ${(p) => p.theme.fontSize.m};\n  color: ${(p) => p.theme.colors.white};\n`;\n","import React from 'react';\nimport { ListWrap, List } from './ContactList.styled';\nimport { Button } from 'components/FormList/FormList.styled';\nimport { UserDeleteOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ListWrap>\n      {contacts.map(({ id, name, number }) => (\n        <List key={id}>\n          {name + ' : ' + number}\n\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            <UserDeleteOutlined />\n          </Button>\n        </List>\n      ))}\n    </ListWrap>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled'\n\nexport const FormFilter = styled.form`\ndisplay: flex;\njustify-content: center;\n`\nexport const LabelFilter = styled.label`\ncolor: ${(p) => p.theme.colors.grey};\n`\nexport const InputFilter = styled.input``\n","import React from 'react';\nimport { FormFilter, LabelFilter } from './Filter.styled';\nimport { Input } from '../FormList/FormList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FormFilter>\n      <LabelFilter>\n        <Input\n          type=\"name\"\n          value={value}\n          onChange={handleChange}\n          placeholder=\"Please enter a name to search\"\n        />\n      </LabelFilter>\n    </FormFilter>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    padding: 40px;\n    width: 400px;\n    margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  font-size: ${(p) => p.theme.fontSize.xl};\n  color: ${(p) => p.theme.colors.white};\n`;","import PropTypes from 'prop-types';\nimport {Title} from './Layout.styled'\n\nconst GlobalTitle = ({title}) => {\n  return (\n    <Title >{title}</Title>\n  );\n}\n\nGlobalTitle.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default GlobalTitle;","import { HelmetProvider } from 'react-helmet-async';\nimport FormList from '../components/FormList/FormList';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport GlobalTitle from '../components/Layout/Title';\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <GlobalTitle title=\"Phonebook\" />\n        <FormList />\n        <GlobalTitle title=\"Contacts\" />\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["notifyOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getFilter","state","filter","getVisibleContacts","contacts","items","getContacts","normalizedFilter","toLowerCase","contact","name","includes","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","event","preventDefault","normalizedName","find","el","toast","addContact","id","nanoid","type","placeholder","onChange","pattern","title","required","UserAddOutlined","ListWrap","styled","p","space","List","fontSize","m","colors","white","map","onClick","deleteContact","UserDeleteOutlined","FormFilter","LabelFilter","grey","changeFilter","Title","xl"],"sourceRoot":""}